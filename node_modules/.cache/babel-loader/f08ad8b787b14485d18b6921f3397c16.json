{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nimport { addUser, populateUsersList, messageReceived } from '../actions';\n\nconst setupSocket = (dispatch, username) => {\n  const socket = new WebSocket('ws://localhost:8989');\n\n  socket.onopen = () => {\n    socket.send(JSON.stringify({\n      type: types.ADD_USER,\n      name: username\n    }));\n\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n\n      switch (data.type) {\n        case types.ADD_MESSAGE:\n          dispatch(messageReceived(data.message, data.author));\n          break;\n\n        case types.ADD_USER:\n          dispatch(addUser(data.name));\n          break;\n\n        case types.USERS_LIST:\n          dispatch(populateUsersList(data.users));\n          break;\n\n        default:\n          break;\n      }\n    };\n  };\n\n  return socket;\n};\n\nexport default setupSocket;","map":{"version":3,"sources":["/home/rissabh/Program/React/react-chat/src/sockets/index.js"],"names":["types","addUser","populateUsersList","messageReceived","setupSocket","dispatch","username","socket","WebSocket","onopen","send","JSON","stringify","type","ADD_USER","name","onmessage","event","data","parse","ADD_MESSAGE","message","author","USERS_LIST","users"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,SAASC,OAAT,EAAkBC,iBAAlB,EAAqCC,eAArC,QAA4D,YAA5D;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxC,QAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AAClBF,IAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AACvBC,MAAAA,IAAI,EAAEb,KAAK,CAACc,QADW;AAEvBC,MAAAA,IAAI,EAAET;AAFiB,KAAf,CAAZ;;AAIAC,IAAAA,MAAM,CAACS,SAAP,GAAoBC,KAAD,IAAW;AAC1B,YAAMC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWF,KAAK,CAACC,IAAjB,CAAb;;AACA,cAAOA,IAAI,CAACL,IAAZ;AACI,aAAKb,KAAK,CAACoB,WAAX;AACIf,UAAAA,QAAQ,CAACF,eAAe,CAACe,IAAI,CAACG,OAAN,EAAeH,IAAI,CAACI,MAApB,CAAhB,CAAR;AACA;;AACJ,aAAKtB,KAAK,CAACc,QAAX;AACIT,UAAAA,QAAQ,CAACJ,OAAO,CAACiB,IAAI,CAACH,IAAN,CAAR,CAAR;AACA;;AACJ,aAAKf,KAAK,CAACuB,UAAX;AACIlB,UAAAA,QAAQ,CAACH,iBAAiB,CAACgB,IAAI,CAACM,KAAN,CAAlB,CAAR;AACA;;AACJ;AACI;AAXR;AAaH,KAfD;AAgBH,GArBD;;AAsBA,SAAOjB,MAAP;AACH,CA1BD;;AA4BA,eAAeH,WAAf","sourcesContent":["import * as types from '../constants/ActionTypes';\nimport { addUser, populateUsersList, messageReceived } from '../actions';\n\nconst setupSocket = (dispatch, username) => {\n    const socket = new WebSocket('ws://localhost:8989');\n\n    socket.onopen = () => {\n        socket.send(JSON.stringify({\n            type: types.ADD_USER,\n            name: username\n        }))\n        socket.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            switch(data.type) {\n                case types.ADD_MESSAGE:\n                    dispatch(messageReceived(data.message, data.author));\n                    break;\n                case types.ADD_USER:\n                    dispatch(addUser(data.name));\n                    break;\n                case types.USERS_LIST:\n                    dispatch(populateUsersList(data.users))\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    return socket;\n}\n\nexport default setupSocket;"]},"metadata":{},"sourceType":"module"}